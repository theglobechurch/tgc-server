---
- name: "Set deploy time"
  set_fact:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"

- name: "Register deploy location"
  set_fact:
    deploy_location: "{{ web_directory }}/deploy/{{ timestamp }}"

- name: "Ensure SSH cert is upto date"
  shell: "/opt/certbot/certbot-auto renew"

- name: Creates directories
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: webdeploy
    mode: 0775
    recurse: yes
  with_items:
    - "{{ web_directory }}/deploy"
    - "{{ uploads_location }}"

- name: "Clone the repo"
  become: false
  git:
    repo: 'https://github.com/theglobechurch/tgc.git'
    dest: "{{ deploy_location }}"
    force: yes

- name: "Add devise key"
  become: false
  lineinfile:
    dest: ~/.profile
    state: present
    regexp: '^DEVISE_SECRET_KEY'
    line: "DEVISE_SECRET_KEY='{{ lookup('password', 'creds/devise_sk.txt length=64 chars=ascii_letters,digits,hexdigits') }}'"

- name: "Add rails key"
  become: false
  lineinfile:
    dest: ~/.profile
    state: present
    regexp: '^RAILS_SECRET_KEY'
    line: "RAILS_SECRET_KEY='{{ lookup('password', 'creds/rails_sk.txt length=64 chars=ascii_letters,digits,hexdigits') }}'"

- name: "Install Gems"
  become: false
  bundler:
    state: present
    gemfile: "{{ deploy_location }}/Gemfile"

- name: "Check for package.json"
  stat:
    path: "{{ deploy_location }}/package.json"
  register: packagejson

- name: "NPM install"
  become: false
  npm:
    path: "{{ deploy_location }}"
  when: packagejson.stat.exists

- name: "Setup database"
  become: false
  shell: bundle exec rake db:migrate RAILS_ENV="production" 
  args:
    chdir: "{{ deploy_location }}"
  environment:
    RAILS_SECRET_KEY: "{{ lookup('password', 'creds/rails_sk.txt length=64 chars=ascii_letters,digits,hexdigits') }}"
    DEVISE_SECRET_KEY: "{{ lookup('password', 'creds/devise_sk.txt length=64 chars=ascii_letters,digits,hexdigits') }}"

# - name: "Seed database"
#   become: false
#   shell: bundle exec rake db:seed
#   args:
#     chdir: "{{ deploy_location }}"
#   environment:
#     RAILS_SECRET_KEY: "{{ lookup('password', 'creds/rails_sk.txt length=64 chars=ascii_letters,digits,hexdigits') }}"
#     DEVISE_SECRET_KEY: "{{ lookup('password', 'creds/devise_sk.txt length=64 chars=ascii_letters,digits,hexdigits') }}"

- name: "Gulp all the things"
  become: false
  shell: node_modules/.bin/gulp deploy
  args:
    chdir: "{{ deploy_location }}"

- name: "Precompile assets"
  become: false
  shell: bundle exec rails assets:precompile RAILS_ENV="production" 
  args:
    chdir: "{{ deploy_location }}"

- name: "Remove rails upload folder (symlinked shortly)"
  file:
    state: absent
    path: "{{ deploy_location }}/public/uploads"

- name: symlink the uploads folder
  file:
    path: "{{ deploy_location }}/public/uploads"
    src: "{{ uploads_location }}"
    state: link 
    force: yes

# NGINX config
- template:
    src: ../templates/{{ item }}.j2
    dest: /etc/nginx/sites-available/{{ item }}.conf
  with_items:
  - globe.church

- name: "Enable config"
  file:
    src: /etc/nginx/sites-available/{{ item }}.conf
    dest: /etc/nginx/sites-enabled/{{ item }}.conf
    state: link
  with_items:
  - globe.church

# Push it live
- name: "Create symlink to live"
  shell: "ln -s -n -f {{ deploy_location }} {{ live_location }}"

- name: "(Re)start Nginx"
  service:
    name: nginx
    state: reloaded
